<?php

namespace backend\models;

use Yii;
use yii\helpers\FileHelper;
use yii\web\UploadedFile;

/**
 * This is the model class for table "{{%phones}}".
 *
 * @property string $id
 * @property string $phone 手机号
 * @property string $province 省
 * @property string $city 市
 * @property string $area 区
 * @property string $send_num 推送数
 * @property string $see_num 查阅数
 * @property int $tags_group_id
 * @property int $status 1，成功 -1 删除
 */
class Phones extends \yii\db\ActiveRecord
{
    private $phoneFile;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%phones}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['send_num', 'see_num', 'tags_group_id', 'status'], 'integer'],
            [['phone'], 'string', 'max' => 11],
            [['province', 'city', 'area'], 'string', 'max' => 10],
            [['phone'], 'unique'],
        ];
    }

    public function afterValidate()
    {
        parent::afterValidate(); // TODO: Change the autogenerated stub
        $postData = Yii::$app->getRequest()->post();

        if (!empty($postData['Phones']['tags'])) {
            $tags = $postData['Phones']['tags'];
            $tagsList = explode(',', $tags);
            $tagsList = array_filter($tagsList);
            if ($tagsList) {
                sort($tagsList);
                $_tags = implode(',', $tagsList);
                $sign = md5($_tags);
                $tagsGroup = TagsGroup::find()->where(['sign' => $sign])->one();
                if (!$tagsGroup) {
                    $tagsGroup = new TagsGroup();
                    $tagsGroup->sign = $sign;
                    $tagsGroup->tags = $_tags;
                    $tagsGroup->save();
                }
                foreach ($tagsList as $tagId) {
                    $tags = TagsGroupJoin::find()->where([
                        'tags_group_id' => $tagsGroup->id,
                        'tags_id' => $tagId
                    ])->one();

                    if(!$tags){
                        $tags = new TagsGroupJoin();
//                        $tags->tags_group_id = $tagsGroup->id;
//                        $tags->tags_id = $tagId;
                        $tags->setAttribute('tags_group_id', $tagsGroup->id);
                        $tags->setAttribute('tags_id', $tagId);
                        $tags->save();
                    }
                }
                $this->setAttribute('tags_group_id', $tagsGroup->id);
            }

//            var_dump($this->getAttributes());
//            exit();
        }



    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'phone' => '手机号',
            'province' => '省',
            'city' => '市',
            'area' => '区',
            'send_num' => '推送数',
            'see_num' => '查阅数',
            'tags_group_id' => 'Tags Group ID',
            'status' => '1，成功 -1 删除',
        ];
    }

    /**
     * @inheritdoc
     * @return PhonesQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new PhonesQuery(get_called_class());
    }

    public function getPhoneFile()
    {
        return $this->phoneFile;
    }

    public function setPhoneFile($value)
    {
        $this->phoneFile = $value;
        return $this;
    }

    public function upload()
    {
        if ($this->validate()) {
            $this->phoneFile->saveAs('uploads/' . $this->phoneFile->baseName . '.' . $this->phoneFile->extension);
            return true;
        } else {
            return false;
        }
    }

    public static function createMorePhone(Phones $model)
    {
        $list = [];
        $file = Yii::$app->getBasePath() . '/web/uploads/' . $model->phoneFile->name;
        if (file_exists($file)) {
            $result = file_get_contents($file);
            $result = explode("\n", $result);

            foreach ($result as $value) {
                if (preg_match('/1\d{10}/', $value)) {
                    $list[] = [
                        'phone' => $value,
                        'province' => $model->getAttribute('province'),
                        'city' => $model->getAttribute('city'),
                        'area' => $model->getAttribute('area'),
                        'send_num' => $model->getAttribute('send_num'),
                        'see_num' => $model->getAttribute('see_num'),
                        'tags_group_id' => $model->getAttribute('tags_group_id'),
                    ];
                }
            }
            @unlink($file);
            if (!empty($list)) {
                !Yii::$app->db->createCommand()->batchInsert(self::tableName(), [
                    'phone',
                    'province',
                    'city',
                    'area',
                    'send_num',
                    'see_num',
                    'tags_group_id',
                ], $list)->execute();
            }

        }
        return $list;
    }
}
